Схема работы интерпретатора:

Сначала TokenReader разбивает текст программы на токены, 
читая текст с помощью CharReader-а:
[Текст] -> Reader -> CharReader -> TokenReader -> [Token*]

Затем Parser составляет из лексем узлы абстрактного синтаксического дерева программа.
[Token*] -> Parser -> [ASTNode*]
Таким образом программа представляет собой список узлов.

Узлы могут быть выполнены методом ASTNote.execute(Scope scope),
который возвращает некоторый результат выполнения.

Scope — область видимости. Выполнение некоторых узлов синтаксического дерева 
может помещать в область видимости, новые функции. 
В дальнейшем эти функции могут использоваться при выполнении других узлов.

Ключевой концепцией при реализации выполнения узла является Fun — абстракция функции.
У этой абстракции есть несколько используемых интерпретатором реализаций.