#summary Как начать работать над fun?

= Среда и инструменты разработки =
Вам понадобятся Java 6.0 и Eclipse v3.1.1 или выше. И то и другое можно скачать с официальных сайтов, либо с городского (Екатеринбург) адреса http://courses.busin.usu.ru/oop/

Кроме того, желательно иметь [http://subclipse.tigris.org Subclipse] — плагин к eclipse для работы с svn. Его можно найти, скачать и поставить средствами самого же eclipse (Help → Software Updates → Find and Install).

Можно обойтись и без Subclipse, но тогда нужен будет какой-то другой клиент для работы с [http://ru.wikipedia.org/wiki/Система_управления_версиями сервером хранения исходников] (svn). Например, [http://tortoisesvn.tigris.org/ TortoiseSVN] 


= Как взять исходники? =

Если коротко, то исходники лежат в svn сервере, параметры которого описаны на вкладке Source. Там же можно найти и веб интерфейс для доступа к исходникам. Ниже описано, как открыть проект с исходниками в IDE eclipse.

== С установленным Subclipse ==

Eclipse → Menu File → Import... → Other → Checkout projects from SVN → 

Create a new repository location → 

Url: http://fun-lang.googlecode.com/svn/trunk/ → 

выделить http://fun-lang.googlecode.com/svn/trunk/ → Next → Finish

== С помощью Tortoise SVN ==
Получить содержимое директории http://fun-lang.googlecode.com/svn/trunk/ из репозитория в произвольную локальную директорию Fun.

Eclipse → Menu File → Import... → General → Existing Projects into Workspace → 

Выбрать директорию Fun → Finish

= С чего начать знакомство с проектом? =
В директории с исходниками и в каждом из пакетов есть readme.txt файлы. С них и стоит начать.

Можно попробовать запустить все модульные тесты проекта, посмотреть на тесты и понять, что и как работает.

Можно попробовать подобавлять функциональных тестов в пакете testing и посмотреть как fun ведет себя на них.

Каждый раз, когда поведение некоторого класса кажется непонятным, можно начать с написания максимально простого модульного теста, воспроизводящего непонятное поведение.

= Как работать? =
Нужно зайти на вкладку Issues (задачи), просмотреть имеющиеся задачи и выбрать задачу себе по душе. Дальше нужно реализовать задачу, стараясь не вносить лишних с точки зрения задачи изменений в код (его же придётся сливать с изменениями других людей!). После этого подготовить патч, содержащий ваши изменения и прислать этот патч мне на xoposhiy@mail.ru.

== Как делать патч? ==
Патч лучше делать с помощью Tortoise SVN. Для этого в Проводнике в контекстном меню папки с проектом выбираем TortoiseSVN → Create patch. 

Перед тем как делать патч настоятельно рекомендуется запустить команду Check for modifications в контекстном меню папки, для того чтобы в открывшемся окне критическим взглядом просмотреть все сделанные изменения. Просмотреть изменения в конкретном файле можно двойным щелчком. Нежелательные изменения можно откатить из того же окна с помощью пункта контекстного меню Revert.

Относитесь к подготовке патча максимально ответственно и аккуратно!